<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="UserDataset" targetNamespace="http://tempuri.org/UserDataset.xsd" xmlns:mstns="http://tempuri.org/UserDataset.xsd" xmlns="http://tempuri.org/UserDataset.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestDataBaseConnectionString" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestDataBaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LeagueManagement_DX.Properties.Settings.GlobalReference.Default.TestDataBaseConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestDataBaseConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestDataBaseConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LeagueManagement_DX.Properties.Settings.GlobalReference.Default.TestDataBaseConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupPermissionTableAdapter" GeneratorDataComponentClassName="GroupPermissionTableAdapter" Name="GroupPermission" UserDataComponentName="GroupPermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestDataBaseConnectionString (Settings)" DbObjectName="dbo.GroupPermission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupPermission] WHERE (([GroupId] = @Original_GroupId) AND ([PermissionId] = @Original_PermissionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupPermission] ([GroupId], [PermissionId]) VALUES (@GroupId, @PermissionId);
SELECT GroupId, PermissionId FROM GroupPermission WHERE (GroupId = @GroupId) AND (PermissionId = @PermissionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, PermissionId FROM dbo.GroupPermission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupPermission] SET [GroupId] = @GroupId, [PermissionId] = @PermissionId WHERE (([GroupId] = @Original_GroupId) AND ([PermissionId] = @Original_PermissionId));
SELECT GroupId, PermissionId FROM GroupPermission WHERE (GroupId = @GroupId) AND (PermissionId = @PermissionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="PermissionId" DataSetColumn="PermissionId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupUserTableAdapter" GeneratorDataComponentClassName="GroupUserTableAdapter" Name="GroupUser" UserDataComponentName="GroupUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestDataBaseConnectionString (Settings)" DbObjectName="dbo.GroupUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupUser] WHERE (([GroupId] = @Original_GroupId) AND ([GroupName] = @Original_GroupName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupUser] ([GroupId], [GroupName]) VALUES (@GroupId, @GroupName);
SELECT GroupId, GroupName FROM GroupUser WHERE (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, GroupName FROM dbo.GroupUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupUser] SET [GroupId] = @GroupId, [GroupName] = @GroupName WHERE (([GroupId] = @Original_GroupId) AND ([GroupName] = @Original_GroupName));
SELECT GroupId, GroupName FROM GroupUser WHERE (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TestDataBaseConnectionString (Settings)" DbObjectName="dbo.GroupUser" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetGroupName" Modifier="Public" Name="GetGroupName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetGroupName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        GroupUser.GroupName
FROM            GroupUser INNER JOIN
                         UserDetail ON GroupUser.GroupId = UserDetail.GroupId
WHERE        (UserDetail.Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Username" ColumnName="Username" DataSourceName="[E:\LIB\KY 2 NAM 2\NMCNPM\BACKUP\DO AN UPDATE\LEAGUEMANAGEMENT_DX\TESTDATABASE.MDF].dbo.UserDetail" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionTableAdapter" GeneratorDataComponentClassName="PermissionTableAdapter" Name="Permission" UserDataComponentName="PermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestDataBaseConnectionString (Settings)" DbObjectName="dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Permission] WHERE (([PermissionId] = @Original_PermissionId) AND ([PermissionName] = @Original_PermissionName) AND ([Level] = @Original_Level))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_Level" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Permission] ([PermissionId], [PermissionName], [Level]) VALUES (@PermissionId, @PermissionName, @Level);
SELECT PermissionId, PermissionName, Level FROM Permission WHERE (PermissionId = @PermissionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Level" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PermissionId, PermissionName, [Level] FROM dbo.Permission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Permission] SET [PermissionId] = @PermissionId, [PermissionName] = @PermissionName, [Level] = @Level WHERE (([PermissionId] = @Original_PermissionId) AND ([PermissionName] = @Original_PermissionName) AND ([Level] = @Original_Level));
SELECT PermissionId, PermissionName, Level FROM Permission WHERE (PermissionId = @PermissionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Level" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_Level" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Level" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PermissionId" DataSetColumn="PermissionId" />
              <Mapping SourceColumn="PermissionName" DataSetColumn="PermissionName" />
              <Mapping SourceColumn="Level" DataSetColumn="Level" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TestDataBaseConnectionString (Settings)" DbObjectName="dbo.Permission" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetLevelPermission" Modifier="Public" Name="GetLevelPermission" QueryType="Scalar" ScalarCallRetval="System.Int16, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetLevelPermission">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Permission.Level
FROM            Permission INNER JOIN
                         GroupPermission ON Permission.PermissionId = GroupPermission.PermissionId INNER JOIN
                         GroupUser ON GroupPermission.GroupId = GroupUser.GroupId INNER JOIN
                         Permission AS Permission_1 ON GroupPermission.PermissionId = Permission_1.PermissionId INNER JOIN
                         UserDetail ON GroupPermission.GroupId = UserDetail.GroupId
WHERE        (UserDetail.Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Username" ColumnName="Username" DataSourceName="[E:\LIB\KY 2 NAM 2\NMCNPM\BACKUP\DO AN UPDATE\LEAGUEMANAGEMENT_DX\TESTDATABASE.MDF].dbo.UserDetail" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserDetailTableAdapter" GeneratorDataComponentClassName="UserDetailTableAdapter" Name="UserDetail" UserDataComponentName="UserDetailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestDataBaseConnectionString1 (Settings)" DbObjectName="dbo.UserDetail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserDetail] ([Username], [Password], [FullName], [DateOfBirth], [GroupId], [LastLogin], [Avatar]) VALUES (@Username, @Password, @FullName, @DateOfBirth, @GroupId, @LastLogin, @Avatar)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DateOfBirth" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="DateOfBirth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LastLogin" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="LastLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Avatar" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Avatar" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, Password, FullName, DateOfBirth, GroupId, LastLogin, Avatar FROM dbo.UserDetail</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="DateOfBirth" DataSetColumn="DateOfBirth" />
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="LastLogin" DataSetColumn="LastLogin" />
              <Mapping SourceColumn="Avatar" DataSetColumn="Avatar" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="UserDataset" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="UserDataset" msprop:Generator_UserDSName="UserDataset">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GroupPermission" msprop:Generator_TableClassName="GroupPermissionDataTable" msprop:Generator_TableVarName="tableGroupPermission" msprop:Generator_TablePropName="GroupPermission" msprop:Generator_RowDeletingName="GroupPermissionRowDeleting" msprop:Generator_RowChangingName="GroupPermissionRowChanging" msprop:Generator_RowEvHandlerName="GroupPermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupPermissionRowDeleted" msprop:Generator_UserTableName="GroupPermission" msprop:Generator_RowChangedName="GroupPermissionRowChanged" msprop:Generator_RowEvArgName="GroupPermissionRowChangeEvent" msprop:Generator_RowClassName="GroupPermissionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="PermissionId" msprop:Generator_ColumnVarNameInTable="columnPermissionId" msprop:Generator_ColumnPropNameInRow="PermissionId" msprop:Generator_ColumnPropNameInTable="PermissionIdColumn" msprop:Generator_UserColumnName="PermissionId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupUser" msprop:Generator_TableClassName="GroupUserDataTable" msprop:Generator_TableVarName="tableGroupUser" msprop:Generator_TablePropName="GroupUser" msprop:Generator_RowDeletingName="GroupUserRowDeleting" msprop:Generator_RowChangingName="GroupUserRowChanging" msprop:Generator_RowEvHandlerName="GroupUserRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupUserRowDeleted" msprop:Generator_UserTableName="GroupUser" msprop:Generator_RowChangedName="GroupUserRowChanged" msprop:Generator_RowEvArgName="GroupUserRowChangeEvent" msprop:Generator_RowClassName="GroupUserRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permission" msprop:Generator_TableClassName="PermissionDataTable" msprop:Generator_TableVarName="tablePermission" msprop:Generator_TablePropName="Permission" msprop:Generator_RowDeletingName="PermissionRowDeleting" msprop:Generator_RowChangingName="PermissionRowChanging" msprop:Generator_RowEvHandlerName="PermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionRowDeleted" msprop:Generator_UserTableName="Permission" msprop:Generator_RowChangedName="PermissionRowChanged" msprop:Generator_RowEvArgName="PermissionRowChangeEvent" msprop:Generator_RowClassName="PermissionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PermissionId" msprop:Generator_ColumnVarNameInTable="columnPermissionId" msprop:Generator_ColumnPropNameInRow="PermissionId" msprop:Generator_ColumnPropNameInTable="PermissionIdColumn" msprop:Generator_UserColumnName="PermissionId" type="xs:int" />
              <xs:element name="PermissionName" msprop:Generator_ColumnVarNameInTable="columnPermissionName" msprop:Generator_ColumnPropNameInRow="PermissionName" msprop:Generator_ColumnPropNameInTable="PermissionNameColumn" msprop:Generator_UserColumnName="PermissionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Level" msprop:Generator_ColumnVarNameInTable="columnLevel" msprop:Generator_ColumnPropNameInRow="Level" msprop:Generator_ColumnPropNameInTable="LevelColumn" msprop:Generator_UserColumnName="Level" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserDetail" msprop:Generator_TableClassName="UserDetailDataTable" msprop:Generator_TableVarName="tableUserDetail" msprop:Generator_TablePropName="UserDetail" msprop:Generator_RowDeletingName="UserDetailRowDeleting" msprop:Generator_RowChangingName="UserDetailRowChanging" msprop:Generator_RowEvHandlerName="UserDetailRowChangeEventHandler" msprop:Generator_RowDeletedName="UserDetailRowDeleted" msprop:Generator_UserTableName="UserDetail" msprop:Generator_RowChangedName="UserDetailRowChanged" msprop:Generator_RowEvArgName="UserDetailRowChangeEvent" msprop:Generator_RowClassName="UserDetailRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username" type="xs:int" />
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DateOfBirth" msprop:Generator_ColumnVarNameInTable="columnDateOfBirth" msprop:Generator_ColumnPropNameInRow="DateOfBirth" msprop:Generator_ColumnPropNameInTable="DateOfBirthColumn" msprop:Generator_UserColumnName="DateOfBirth" type="xs:dateTime" minOccurs="0" />
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="LastLogin" msprop:Generator_ColumnVarNameInTable="columnLastLogin" msprop:Generator_ColumnPropNameInRow="LastLogin" msprop:Generator_ColumnPropNameInTable="LastLoginColumn" msprop:Generator_UserColumnName="LastLogin" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Avatar" msprop:Generator_ColumnVarNameInTable="columnAvatar" msprop:Generator_ColumnPropNameInRow="Avatar" msprop:Generator_ColumnPropNameInTable="AvatarColumn" msprop:Generator_UserColumnName="Avatar" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupPermission" />
      <xs:field xpath="mstns:GroupId" />
      <xs:field xpath="mstns:PermissionId" />
    </xs:unique>
    <xs:unique name="GroupUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupUser" />
      <xs:field xpath="mstns:GroupId" />
    </xs:unique>
    <xs:unique name="Permission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Permission" />
      <xs:field xpath="mstns:PermissionId" />
    </xs:unique>
    <xs:unique name="UserDetail_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserDetail" />
      <xs:field xpath="mstns:Username" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_GroupPermission_GroupUser" msdata:parent="GroupUser" msdata:child="GroupPermission" msdata:parentkey="GroupId" msdata:childkey="GroupId" msprop:Generator_UserChildTable="GroupPermission" msprop:Generator_ChildPropName="GetGroupPermissionRows" msprop:Generator_UserRelationName="FK_GroupPermission_GroupUser" msprop:Generator_RelationVarName="relationFK_GroupPermission_GroupUser" msprop:Generator_UserParentTable="GroupUser" msprop:Generator_ParentPropName="GroupUserRow" />
      <msdata:Relationship name="FK_GroupPermission_Permission" msdata:parent="Permission" msdata:child="GroupPermission" msdata:parentkey="PermissionId" msdata:childkey="PermissionId" msprop:Generator_UserChildTable="GroupPermission" msprop:Generator_ChildPropName="GetGroupPermissionRows" msprop:Generator_UserRelationName="FK_GroupPermission_Permission" msprop:Generator_RelationVarName="relationFK_GroupPermission_Permission" msprop:Generator_UserParentTable="Permission" msprop:Generator_ParentPropName="PermissionRow" />
      <msdata:Relationship name="FK_UserDetail_GroupUser" msdata:parent="GroupUser" msdata:child="UserDetail" msdata:parentkey="GroupId" msdata:childkey="GroupId" msprop:Generator_UserChildTable="UserDetail" msprop:Generator_ChildPropName="GetUserDetailRows" msprop:Generator_UserRelationName="FK_UserDetail_GroupUser" msprop:Generator_ParentPropName="GroupUserRow" msprop:Generator_RelationVarName="relationFK_UserDetail_GroupUser" msprop:Generator_UserParentTable="GroupUser" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>